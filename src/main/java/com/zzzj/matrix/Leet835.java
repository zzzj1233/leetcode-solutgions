package com.zzzj.matrix;


import com.zzzj.leet.LeetUtils;

import java.util.Arrays;

public class Leet835 {

    public static void main(String[] args) {

        System.out.println(largestOverlap(
                LeetUtils.convertInts("[[1,1,0],[0,1,0],[0,1,0]]"),
                LeetUtils.convertInts("[[0,0,0],[0,1,1],[0,0,1]]")
        ));

        System.out.println(largestOverlap(
                LeetUtils.convertInts("[[1,1,0],[0,1,0],[0,1,0]]"),
                LeetUtils.convertInts("[[0,0,0],[0,1,1],[0,0,1]]")
        ));

        System.out.println(largestOverlap(
                LeetUtils.convertInts("[[1,1,1,0,1,0,1,1,1,1,1,1,1,0,1],[1,1,1,1,0,0,1,1,1,1,1,0,1,0,0],[0,1,1,0,1,1,1,0,1,1,1,0,1,1,1],[0,1,0,1,0,1,0,1,1,1,1,1,1,1,0],[1,1,1,1,1,0,0,0,1,1,1,0,1,1,0],[0,1,0,0,1,0,0,1,1,1,1,1,1,1,0],[1,1,1,0,1,1,1,1,1,0,1,0,1,0,0],[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[0,0,0,1,1,1,0,1,1,0,1,1,1,1,1],[1,0,1,0,0,1,1,1,1,1,1,1,0,1,0],[1,1,1,1,1,0,0,1,1,0,0,1,1,1,1],[0,1,1,1,0,1,1,1,0,1,1,0,1,0,1],[1,1,0,1,1,0,1,0,1,1,1,1,1,0,1],[0,1,1,1,1,1,0,1,1,1,0,1,1,0,1],[0,1,0,1,1,0,1,1,1,0,1,1,1,0,1]]"),
                LeetUtils.convertInts("[[1,0,0,1,1,1,1,1,1,1,1,0,1,0,0],[1,0,0,1,0,1,1,1,1,0,1,1,0,1,1],[1,1,1,1,1,1,1,1,0,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,0,0,1,0,0,0],[0,1,1,1,0,1,0,0,1,1,0,1,0,1,0],[1,1,1,1,1,1,1,1,0,1,1,1,0,1,1],[1,1,0,1,1,1,1,0,0,1,0,0,1,0,0],[1,1,1,0,0,1,1,1,1,1,1,1,1,1,0],[1,0,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,1,1,1,1,1,1,1,1,1,1,0],[1,1,1,0,1,0,0,1,1,1,1,0,0,1,0],[1,1,1,0,0,1,1,0,1,1,1,1,1,0,1],[1,1,1,1,1,1,1,1,1,0,1,0,1,1,1],[1,1,1,1,1,1,0,0,1,0,1,1,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0]]")
        ));


    }

    public static int largestOverlap(int[][] img1, int[][] img2) {

        int ans = 0;

        int N = img1.length;


        // N - 1 ~ N - 1 : 0 ~ 0
        // 0 ~ 0 : N - 1 ~ N - 1

        int n3 = 3 * N;

        int[][] cp = new int[n3][n3];

        for (int i = N, i1 = 0; i1 < N; i++, i1++) {

            for (int j = N, j1 = 0; j1 < N; j++, j1++) {

                cp[i][j] = img2[i1][j1];

            }

        }


        for (int i = 0; i < N << 1; i++) {

            for (int j = 0; j < N << 1; j++) {

                int cnt = 0;

                for (int i1 = 0; i1 < N; i1++) {

                    for (int j1 = 0; j1 < N; j1++) {

                        cnt += img1[i1][j1] & cp[i1 + i][j1 + j];

                    }

                }

                ans = Math.max(ans, cnt);
            }

        }


        return ans;
    }


}